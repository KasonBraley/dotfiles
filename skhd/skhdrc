# change layout of desktop
alt - b : yabai -m space --layout bsp
alt - s : yabai -m space --layout stack
alt - f : yabai -m space --layout float

# fast focus spaces
# using these key codes due to my custom dvorak layout
alt - 0x12 : yabai -m space --focus 1
alt - 0x13 : yabai -m space --focus 2
alt - 0x14 : yabai -m space --focus 3
alt - 0x15 : yabai -m space --focus 4

# move forward in the stack
alt - k : yabai -m query --spaces --space \
  | jq -re ".index" \
  | xargs -I{} yabai -m query --windows --space {} \
  | jq -sre "add | map(select(.minimized != 1)) | sort_by(.display, .frame.y, .frame.x, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" \
  | xargs -I{} yabai -m window --focus {}

# move backward in the stack
alt - j : yabai -m query --spaces --space \
  | jq -re ".index" \
  | xargs -I{} yabai -m query --windows --space {} \
  | jq -sre "add | map(select(.minimized != 1)) | sort_by(.display, .frame.y, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" \
  | xargs -I{} yabai -m window --focus {}

# create desktop and follow focus - uses jq for parsing json (brew install jq)
alt - n : yabai -m space --create && \
                index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                yabai -m space --focus "${index}"

# destroy desktop
alt - w : yabai -m space --destroy

# focus window
# alt - x : yabai -m window --focus recent
# alt - h : yabai -m window --focus west
# alt - j : yabai -m window --focus south
# alt - k : yabai -m window --focus north
# alt - l : yabai -m window --focus east

# swap window
shift + alt - x : yabai -m window --swap recent
# shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
# shift + alt - k : yabai -m window --swap north
# shift + alt - l : yabai -m window --swap east

# balance size of windows
shift + alt - 0 : yabai -m space --balance

# make floating window fill screen
shift + alt - k : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
shift + alt - h : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
shift + alt - l : yabai -m window --grid 1:2:1:0:1:1

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
shift + alt - n : yabai -m space --create && \
                  index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                  yabai -m window --space "${index}" && \
                  yabai -m space --focus "${index}"

# rotate tree
alt - r : yabai -m space --rotate 90

# mirror tree y-axis
alt - v : yabai -m space --mirror y-axis

# mirror tree x-axis
alt - x : yabai -m space --mirror x-axis

# toggle desktop offset
alt - a : yabai -m space --toggle padding && yabai -m space --toggle gap

# toggle window native fullscreen
shift + alt - f : yabai -m window --toggle native-fullscreen

# toggle window split type
alt - e : yabai -m window --toggle split

# float / unfloat window and restore position
shift + alt - space : yabai -m window --toggle float && yabai -m window --grid 4:4:1:1:2:2

# toggle topmost (keep above other windows)
alt - o : yabai -m window --toggle topmost

# toggle picture-in-picture
alt - p : yabai -m window --toggle border && \
          yabai -m window --toggle pip

# quicly restart the yabai launch agent
shift + alt - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"


ctrl - return : open /Applications/kitty.app -n --args --single-instance --title="zsh"

